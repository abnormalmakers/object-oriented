实例.实例方法名（调用传参）
类名.实例方法名(实例,调用传参)

类变量可以通过类直接访问
类变量可以通过实例直接访问

类和该类创建出的实例都可调用类方法
类方法不能访问此类创建的实例属性（只能访问类变量）

静态方法 类的实例和类都可直接调用


=============================华丽的分割线===============================
类变量，类方法：
    类可直接调用访问
    实例对象课直接调用访问（先找实例属性，如果存在即返回，不存在再查找类变量）

    在类方法中，不能访问实例变量
    在实例方法中，可以访问类变量

静态方法：
    作用域属于类，但方法既不属于类也不属于实例
    实例和类都可调用


私有属性、方法
    在python类中，以双下划线开头，不一双下划线结尾的标识符为私有成员，在类的外部无法直接访问


单下划线开头例如_foo的属性表示protected的变量，即保护类型，只能允许其本身与其子类进行访问，不能用于from module import *


__foo__: 定义的是特殊方法，一般是系统定义名字 ，类似 __init__() 之类的。
_foo: 以单下划线开头的表示的是 protected 类型的变量，即保护类型只能允许其本身与子类进行访问，不能用于 from module import *
__foo: 双下划线的表示的是私有类型(private)的变量, 只能是允许这个类本身进行访问了。
foo:就是public方法